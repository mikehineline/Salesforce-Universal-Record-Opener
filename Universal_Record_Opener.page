<apex:page >

<apex:includeScript value="/support/console/32.0/integration.js"/>

<script type="text/javascript">
/*
	Universal Record Opener for Salesforce
	Version: 6.1
	Author: Mike Hineline

	Copyright (c) 2013, salesforce.com, Inc.
	All rights reserved.
	
	Redistribution and use in source and binary forms, with or without modification, 
	are permitted provided that the following conditions are met:
	
	    * Redistributions of source code must retain the above copyright notice, 
	    this list of conditions and the following disclaimer.
	    * Redistributions in binary form must reproduce the above copyright notice, 
	    this list of conditions and the following disclaimer in the documentation 
	    and/or other materials provided with the distribution.
	    * Neither the name of the salesforce.com, Inc. nor the names of its contributors 
	    may be used to endorse or promote products derived from this software 
	    without specific prior written permission.
	
	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
	ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
	IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
	BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
	DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
	LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
	OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
	OF THE POSSIBILITY OF SUCH DAMAGE.
*/
    /* 
        getPageFormat - get the pageFormat string based on the user's UI
        Inputs: none
        Output: String pageFormat = console, mobile, or aloha
    */
    function getPageFormat() {
        // Detect the page format
        var pageFormat = "aloha";
        if((typeof sforce != 'undefined') && (sforce != null)) {
    	    // If sforce is defined, the page is in the Salesforce Console or Salesforce1 mobile app
    	    if (sforce.console.isInConsole()) {
    	        // In Salesforce Console
                pageFormat = "console";
            } else {
                // In Salesforce1 mobile app
                pageFormat = "mobile";
            }
    	} else {
    		// Default to aloha
            pageFormat = "aloha";
    	}
        // Return the page format
        return pageFormat;
    } 

    /*
        openSubtab - open a new subtab in the Salesforce console as a subtab of the enclosing primary tab
        Inputs:
            - String url - URL to open in the subtab
            - String tabTitle - title of the console subtab
        Returns: none
    */
    function openSubtab(url,tabTitle) {
        var openSubtabFunction = function openSubtabFunction(result) {
            // Open a new subtab with primaryTabId=result.id, url=url,active=true,tabLabel=tabTitle,id=null (create new subtab),callback=N/A,name=N/A
            sforce.console.openSubtab(result.id,url,true,tabTitle,null);
        }
        sforce.console.getEnclosingPrimaryTabId(openSubtabFunction);
    }

    /*
        openRecord - open a Salesforce record page specific to the UI:
            - Salesforce console: a new tab is opened containing the record
            - Salesforce1 mobile app: the record is navigated to
            - Aloha UI: the record is opened in a new window (/browser tab)
        Inputs:
            - ID recordID - ID of the record to which to navigate
            - String tabType:
                - primary - open a new primary tab
                - sub - open a new subtab
            - String targetLabel - title of the console tab [should be passed URI encoded] (input null or empty string ('') to accept default label)
            - String targetAction:
                - view - open the record for viewing
                - edit - open the record for editing
                - close - open the URL with delete rendering where available (console, aloha, NOT Salesforce1)
                - new - create a new record
            - String entityName - name of the object (e.g. Task)
        Returns: none
    */
    function openRecord(recordID, tabType, targetLabel, targetAction, entityName) {
        // Initial recordID cleanup
        if (recordID != null) {
            // Set the default 'URL' to be the recordID
            var thisURL = '/' + recordID;

            // Detect Content which will be displayed instead of Files in the Salesforce console & Aloha UI
            if (recordID.substring(0,3) == '069') {
                thisURL = encodeURI('/sfc/#version/' + recordID);
            }
        }

        // Initial targetLabel cleanup
        targetLabel = decodeURI(targetLabel);

        // Append appropriate modifier based on targetAction
        if (targetAction == 'close') {
            // close/edit modifier
            thisURL += '/e?close=1&cancelURL=%2F' + recordID;
        } else if (targetAction == 'edit') {
            // edit modifier
            thisURL += '/e';
        } else if (targetAction == 'new') {
            // new URL (overwrites initialized default)
// !!!! NOTE: need to add the rest of the edit URL shortcuts for all other Objects
            if (entityName == 'Task') {
                thisURL = '/00T/e';
            }
        }
        
        // Determine the UI
        var pageFormat = getPageFormat();

        // Form the appropriate javascript function based on the UI the user is using
        if (pageFormat == 'console') {
            // Open the targetURL in a new console tab
            if (tabType == 'sub') {
                if(targetLabel == null || targetLabel == '') targetLabel = '';
                // Open a new sub tab
                openSubtab(thisURL, targetLabel);
            } else {
                // Open a new primary tab
                // Paramters: id=null (new tab), url=thisURL, active=true, tabLabel=targetLabel, callback=N/A
                if(targetLabel == null || targetLabel == '') {
                    sforce.console.openPrimaryTab(null, thisURL, true);
                } else {
                    sforce.console.openPrimaryTab(null, thisURL, true, targetLabel);
                }
            }
        } else if (pageFormat == 'mobile') {
            if (targetAction == 'edit') {
                // Open the record for editing in Salesforce1
                sforce.one.editRecord(recordID);
            } else if (targetAction == 'new') {
                // Open the record for editing in Salesforce1
                sforce.one.createRecord(entityName);
            } else {
                // Default (including targetAction == 'view'): open the recordID for viewing in Salesforce1
                sforce.one.navigateToSObject(recordID);
            }
        } else {
            // Open record using normal browser window.open commands (for the Aloha UI)
            window.open(thisURL,recordID);
        }
    }
</script>

<br /><br />
<em><script>document.write(getPageFormat());</script> UI detected</em><br />
<br /><br />
<b>All of these links will open properly in the Aloha UI, Salesforce console, or Salesforce1:</b><br />
<br />
[Replace the ID values in the links below with IDs for your own org]<br />
<br />
Open a record for viewing.  If the user is viewing from the console, open it in a new <b>primary tab</b> with the <b>default label</b>:<br />
<a href="javascript:void(0);" onClick="javascript:openRecord('001U0000005zXLM','primary','','view','Account')">Click here</a><br />
<br />
Open a record for viewing.  If the user is viewing from the console, open it in a new <b>primary tab</b> with the <b>custom label</b>:<br />
<a href="javascript:void(0);" onClick="javascript:openRecord('001U0000005zXLM','primary','Custom Label','view','Account')">Click here</a><br />
<br />
<i>Open a record for viewing.  If the user is viewing from the console, open it in a new <b>subtab</b>:</i><br />
<i>This would be used if this Visualforce page is used within a record (sidepanel or VisualForce page within a page layout):</i><br />
<a href="javascript:void(0);" onClick="javascript:openRecord('006U000000EKwRk','sub','','view','Opportunity')">Click here</a><br />
<br />
Open a record for <b>editing</b>.  If the user is viewing from the console, open it in a new primary tab:<br />
<a href="javascript:void(0);" onClick="javascript:openRecord('001U0000005zXLM','primary','','edit','Account')">Click here</a><br />
<br />
Create a <b>new</b> task.  If the user is viewing from the console, open it in a new primary tab:<br />
<a href="javascript:void(0);" onClick="javascript:openRecord(null,'primary','New Task','new','Task')">Click here</a><br />
<br />

</apex:page>
